///--------------------------------------------------------------------------///

@import 'set';
  
///--------------------------------------------------------------------------///

///
/// @method divide
/// separates keys and values, returning as a list with 2 lists ( keys, values )
/// @param map {map} the map to divide
/// @return divided {list of lists} ( keys, values )
///

@function divide( $map ){
  
  $_DEBUG: false;
  
  @if type-of( $map ) != map {
    @error 'map-divide requires valid maps after key(s)!'
  }
  
  $k: map-keys( $map );
  $v: map-values( $map );
    
  @return ( $k, $v );

}

///--------------------------------------------------------------------------///

@if false {

  $n: divide;
  $a:( my: map, to: $n );
  $r: call( $n, $a );
  $e: ( ( my, to ), ( map, divide ) );
  @debug '#{$n} works: #{ $r == $e or $r }';  
  
}

///--------------------------------------------------------------------------///